#include <bits/stdc++.h>
using namespace std;


struct Node
{
	char data;
	Node* left, * right;
};


Node* newNode(int data)
{
	Node* node = (Node*)malloc(sizeof(Node));
	node->data = data;
	node->left = node->right = NULL;
	return (node);
}

Node* insertLevelOrder(char arr[], Node* root,
					int i, int n)
{
	if (i < n)
	{
		Node* temp = newNode(arr[i]);
		root = temp;
		if(arr[i] != 'N'){

		root->left = insertLevelOrder(arr,
				root->left, 2 * i + 1, n);

		root->right = insertLevelOrder(arr,
				root->right, 2 * i + 2, n);
        }
	}
	return root;
}

unsigned int getLeafCount(struct Node* node)
{
    if(node == NULL || node->data == 'N')
        return 0;
    if(node->left == NULL && node->right == NULL)
        return 1;
    else
        return getLeafCount(node->left)+
            getLeafCount(node->right);
}


int main()
{
	int n; cin >> n;
	char arr[n+1];
	for(int i=0;i<n;i++){cin >> arr[i];}
	Node* root = insertLevelOrder(arr, root, 0, n);
	    cout << getLeafCount(root);
}
