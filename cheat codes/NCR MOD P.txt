#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define endl "\n"
#define F first
#define S second
#define mod 1000000007
#define ll long long
#define ull unsigned long long int
#define fr(i,n) for(ll i=0;i<n;i++)
#define reb(i,a,b) for(int i=a;i<b;i++)
#define fin(v,n) find(v.begin(),v.end(),n)
#define pb(n) push_back(n);
#define aut std::vector<ll>::iterator
#define vsort(v) sort(v.begin(),v.end())
#define rssort(s) sort(s.begin(),s.end(),greater<char>())
#define si(s) stoi(s)
#define is(n) to_string(n)
#define ve(v,n) v.erase(v.begin()+n)
#define shit ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define ks(n) cout << "Case #" << n+1 <<": "
#define low(v,n) lower_bound(v.begin(),v.end(), n);
#define upp(v,n) upper_bound(v.begin(),v.end(), n);
#define test ll t; cin >> t; while(t--)
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define MAXN   100001


using namespace std;
using namespace __gnu_pbds;


int m,k=0,i,q=0;
string s1,s2;
int dp[1001][1001][4];

solve(ll x){
ll y= mod-2;
ll res =1;
 while(y){
    if (y & 1)
        res = (res * x) % mod;

        y = y >> 1;
        x = (x * x) %mod;
 }
 return res;
}

int main()
{
    shit;


    ll n=100000;
    ll a[n+1];
    a[0]= 1;
    for(int i=1;i<=n;i++){
        a[i] = (a[i-1]*i)%mod;
    }
    ll r; cin >> r;
    test{
     ll l; cin >> l;
     if(l<=r){
        cout << 1 << endl;
     }
     else{
         l--;
        cout << 1+ (a[l] * solve(a[r]) % mod* solve(a[l-r])% mod) <<  endl;
     }
    }
}
